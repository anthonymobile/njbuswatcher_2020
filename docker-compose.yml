# bug db connection dropping (tripwatcher?)
# db_1              | 2019-07-08T03:53:08.525910Z 157 [Note] Aborted connection 157 to db: 'buses' user: 'buswatcher' host: '172.20.0.7' (Got an error reading communication packets)

# bug flask_gunicorn has errors connecting to db
# todo ???
# todo how is it that tripwatcher seems to be working ok?
# todo get a shell on this container and see what's going on (logs?)

# bug generator generates the stream of db errors
# todo ???
# todo get a shell on this container and see what's going on (logs?)

# bug web page not showing but probably will fix itself once flask_gunicorn is ok


# todo reenable the buswatcher/config lines

# some tips https://serverfault.com/questions/596994/how-can-i-debug-a-docker-container-initialization
#
# from https://github.com/testdrivenio/django-on-docker
# mysql from https://medium.com/@chrischuck35/how-to-create-a-mysql-instance-with-docker-compose-1598f3cc1bee
# install with: docker-compose up -d --build

# to get a shell on an image
# docker run -it -p 8888:80 buswatcher_gunicorn sh
# docker run -it buswatcher_gunicorn sh
#
# or to dump image contents for inspection
# docker run -it buswatcher_gunicorn sh # ok if it fails
# docker export $(docker ps -lq) | tar tf -
#
# or, safer?
# docker create --name="tmp_$$" image:tag
# docker export tmp_$$ | tar t
# docker rm tmp_$$


version: '3.3'

services:  
  db:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'buses'
      MYSQL_USER: 'buswatcher'
      MYSQL_PASSWORD: 'njtransit'
      TZ: 'America/New_York'
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - database_volume:/var/lib/mysql
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  tripwatcher:
    build:
      context: ./
      dockerfile: ./tripwatcher/docker/Dockerfile.conda
    restart: always
    #volumes:
    #  - buswatcher_config:/buswatcher/buswatcher/config  # todo re-enable this now that the path is corrected
    depends_on:
      - db
  generator:
    build:
      context: ./
      dockerfile: ./generator/docker/Dockerfile.conda
    restart: always
    #volumes:
    #  - buswatcher_config:/buswatcher/buswatcher/config  # todo re-enable this now that the path is corrected
    depends_on:
      - db
  flask_gunicorn:
    build:
      context: ./
      dockerfile: buswatcher/docker/Dockerfile.conda

    command: /opt/conda/envs/buswatcher/bin/gunicorn www:app -w 4 -b 0.0.0.0:8000
    restart: always
    volumes:
        - ./buswatcher/:/buswatcher
        - static_volume:/buswatcher/static
    #    - buswatcher_config:/buswatcher/config # todo re-enable this now that the path is corrected
    expose:
      - 8000
    environment:
      - SQL_DB=buses
      - SQL_USER=buswatcher
      - SQL_PASSWORD=njtransit
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      - db
  nginx:
    build:
      context: ./
      dockerfile: ./nginx/docker/Dockerfile
    restart: always
    ports:
      - 80:80
      - 443:443
    depends_on:
      - flask_gunicorn
  dns_updater:
    restart: always
    build:
      context: ./
      dockerfile: ./dns_updater/docker/Dockerfile
volumes:
  database_volume:
  static_volume:
  # buswatcher_config:
